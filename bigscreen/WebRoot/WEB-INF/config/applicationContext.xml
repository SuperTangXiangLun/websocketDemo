<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

	<!-- 使用annotation 自动注册bean,并检查@Required,@Autowired的属性已被注入 -->
	<context:component-scan base-package="cn.utry.psd.call.center">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<!--核心库--> 
	<context:component-scan base-package="utry.*" /> 
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>/WEB-INF/config/jdbc.properties</value>
			    <value>/WEB-INF/config/redis.properties</value>	
			</list>
		</property>
	</bean> 
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClass}" />
		<property name="jdbcUrl"
			value="jdbc:mysql://${jdbc.dbIP}:${jdbc.dbPort}/${jdbc.dbName}?characterEncoding=utf-8&amp;allowMultiQueries=true" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="minPoolSize" value="${jdbc.miniPoolSize}" />
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
		<property name="initialPoolSize" value="${jdbc.initialPoolSize}" />
		<property name="maxIdleTime" value="${jdbc.maxIdleTime}" />
		<property name="acquireIncrement" value="${jdbc.acquireIncrement}" />
		<property name="acquireRetryAttempts" value="${jdbc.acquireRetryAttempts}" />
		<property name="acquireRetryDelay" value="${jdbc.acquireRetryDelay}" />
		<property name="testConnectionOnCheckin" value="${jdbc.testConnectionOnCheckin}" />
		<property name="automaticTestTable" value="${jdbc.automaticTestTable}" />
		<property name="idleConnectionTestPeriod" value="${jdbc.idleConnectionTestPeriod}" />
		<property name="checkoutTimeout" value="${jdbc.checkoutTimeout}" />
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="/WEB-INF/config/mybatis-config.xml" />
		<property name="mapperLocations" value="classpath*:cn/utry/psd/call/center/db/xml/mysql/*Mapper.xml" />
	</bean>
	
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>
	<!-- MyBatis映射自动扫描器配置 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" scope="prototype">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<property name="basePackage" value="utry.psd.call.center.*.dao" />
	</bean>
	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" order="0" proxy-target-class="true" />

	<!-- 定义aspectj -->
	<aop:aspectj-autoproxy expose-proxy="true" proxy-target-class="true" />

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="read*" read-only="true" />
			<tx:method name="select*" read-only="true" />
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<!-- 事务拦截 -->
	<aop:config expose-proxy="true">
		<aop:pointcut id="servicesPointcut"
			expression="execution(* cn.utry.psd.call.center.service.impl.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="servicesPointcut"
			order="2" />
	</aop:config>

	<!-- 业务服务层日志拦截 -->
	<bean id="serviceLogAspect" class="cn.utry.psd.call.center.service.commom.ServiceLogAspect" />
	<aop:config expose-proxy="true">
		<aop:aspect id="serviceLogAspect_AOP" ref="serviceLogAspect"
			order="1">
			<aop:pointcut id="serviceLogPointcut"
				expression="execution(* utry.psd.call.center.service.impl.*.*(..))" />
			<aop:before pointcut-ref="serviceLogPointcut" method="doBefore" />
			<aop:after pointcut-ref="serviceLogPointcut" method="doAfter" />
			<aop:around pointcut-ref="serviceLogPointcut" method="doAround" />
			<aop:after-throwing pointcut-ref="serviceLogPointcut"
				method="doThrowing" throwing="ex" />
		</aop:aspect>
	</aop:config>
	
</beans>